// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, get_column_filter, get_filter, get_select, http, read_odata;

  http = require("http");

  Promise = require("promise");

  read_odata = function(url, filter, select) {
    var promise;
    url += "?$format=json";
    url += get_filter(filter);
    url += get_select(select);
    return promise = new Promise(function(resolve, reject) {
      return http.get(url, function(res) {
        var json;
        json = "";
        res.setEncoding("utf8");
        res.on("data", function(chunk) {
          return json += chunk;
        });
        res.on("end", function() {
          var data;
          data = (JSON.parse(json)).value;
          return resolve(data);
        });
        return res.on("error", reject);
      });
    });
  };


  /*
  Create filter and select query
   */

  get_column_filter = function(column, filter) {
    var q, value;
    if (!filter || filter.length === 0) {
      return "";
    }
    if (typeof filter === 'string') {
      filter = [filter];
    }
    q = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = filter.length; _i < _len; _i++) {
        value = filter[_i];
        _results.push("" + column + " eq '" + value + "'");
      }
      return _results;
    })();
    q = q.join(' or ');
    if (filter.length > 1) {
      q = "(" + q + ")";
    }
    return q;
  };

  get_filter = function(filter) {
    var column, parts, q, values;
    if (!filter || Object.keys(filter).length === 0) {
      return "";
    }
    q = "&$filter=";
    parts = (function() {
      var _results;
      _results = [];
      for (column in filter) {
        values = filter[column];
        _results.push(get_column_filter(column, values));
      }
      return _results;
    })();
    q += parts.join(" and ");
    return q;
  };

  get_select = function(select) {
    if (!select || select.length === 0) {
      return "";
    }
    if (typeof select === 'string') {
      select = [select];
    }
    return "&$select=" + select.join(",");
  };

  module.exports = {
    read_odata: read_odata
  };


  /* Testing
  
  get_meta("81251ned")
  get_data("81251ned", [] 
  	{Perioden: ['2010MM12','2011MM12'], WoonregioS:['NL10  ']},
  	 (_, results)-> console.log results[0], results.length)
  
  get_tables({Language:'en'})
  get_themes({Language: 'en'})
  get_table_featured()
   */

}).call(this);
