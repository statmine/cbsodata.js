// Generated by CoffeeScript 1.8.0
(function() {
  var CATALOG, Promise, add_children, get_featured, get_table_featured, get_table_themes, get_tables, get_theme_tree, get_themes, read_odata, utils;

  utils = require("./utils");

  Promise = require("promise");

  CATALOG = "http://opendata.cbs.nl/ODataCatalog";

  read_odata = require("./utils").read_odata;

  get_tables = function(filter, select, callback) {
    var url;
    url = "" + CATALOG + "/Tables";
    return read_odata(url, filter, select).nodeify(callback);
  };

  get_themes = function(filter, select, callback) {
    var url;
    url = "" + CATALOG + "/Themes";
    return read_odata(url, filter, select).nodeify(callback);
  };

  get_featured = function(filter, select, callback) {
    var url;
    url = "" + CATALOG + "/Featured";
    return read_odata(url, filter, select).nodeify(callback);
  };

  get_table_featured = function(filter, select, callback) {
    var url;
    url = "" + CATALOG + "/Table_Featured";
    return read_odata(url, filter, select).nodeify(callback);
  };

  get_table_themes = function(filter, select, callback) {
    var url;
    url = "" + CATALOG + "/Tables_Themes";
    return read_odata(url, filter, select).nodeify(callback);
  };

  add_children = function(themes, tables, table_themes) {
    var parent, roots, ta, table_idx, th, theme_idx, tt, _i, _j, _k, _l, _len, _len1, _len2, _len3;
    theme_idx = {};
    table_idx = {};
    roots = [];
    for (_i = 0, _len = themes.length; _i < _len; _i++) {
      th = themes[_i];
      th.Children = [];
      theme_idx[th.ID] = th;
    }
    for (_j = 0, _len1 = tables.length; _j < _len1; _j++) {
      ta = tables[_j];
      table_idx[ta.ID] = ta;
    }
    for (_k = 0, _len2 = table_themes.length; _k < _len2; _k++) {
      tt = table_themes[_k];
      th = theme_idx[tt.ThemeID];
      if (th != null) {
        th.Children.push(table_idx[tt.TableID]);
      }
    }
    for (_l = 0, _len3 = themes.length; _l < _len3; _l++) {
      th = themes[_l];
      parent = theme_idx[th.ParentID];
      if (parent) {
        parent.Children.push(th);
      } else {
        roots.push(th);
      }
    }
    return roots;
  };

  get_theme_tree = function(filter, select, callback) {
    var table_themes, tables, themes;
    themes = get_themes(filter, select);
    tables = get_tables(filter, ["ShortTitle", "ID", "Identifier"]);
    table_themes = get_table_themes();
    return Promise.all([themes, tables, table_themes]).then(function(info) {
      themes = info[0], tables = info[1], table_themes = info[2];
      return add_children(themes, tables, table_themes);
    });
  };

  module.exports = {
    get_tables: get_tables,
    get_themes: get_themes,
    get_table_featured: get_table_featured,
    get_featured: get_featured,
    get_table_themes: get_table_themes
  };

}).call(this);
