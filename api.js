// Generated by CoffeeScript 1.9.0
(function() {
  var API, Promise, get_data, get_meta, get_topic_tree, read_odata;

  Promise = require("promise");

  read_odata = require("./utils").read_odata;

  API = "http://opendata.cbs.nl/ODataApi/odata";

  get_meta = function(table, callback) {
    var keys, store, url;
    store = {};
    url = API + "/" + table;
    keys = [];
    return read_odata(url).then(function(metadata) {
      var md, parts, _i, _len;
      parts = [];
      for (_i = 0, _len = metadata.length; _i < _len; _i++) {
        md = metadata[_i];
        if (md.name === "UntypedDataSet" || md.name === "TypedDataSet") {
          continue;
        }
        keys.push(md.name);
        parts.push(read_odata(md.url));
      }
      return Promise.all(parts);
    }).then(function(parts) {
      var i, metadata, _i, _ref;
      metadata = {};
      for (i = _i = 0, _ref = parts.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        metadata[keys[i]] = parts[i];
      }
      return metadata;
    }).nodeify(callback);
  };


  /* Get data via API, which is restricted to 10 000 rows */

  get_data = function(table, filter, select, callback) {
    var url;
    url = API + "/" + table + "/TypedDataSet";
    return read_odata(url, filter, select).nodeify(callback);
  };

  get_topic_tree = function(meta) {
    var col, dataprops, idx, parent, roots, set_title, _i, _j, _k, _len, _len1, _len2;
    dataprops = meta.DataProperties;
    idx = {};
    for (_i = 0, _len = dataprops.length; _i < _len; _i++) {
      col = dataprops[_i];
      idx[col.ID] = col;
    }
    roots = [];
    for (_j = 0, _len1 = dataprops.length; _j < _len1; _j++) {
      col = dataprops[_j];
      if (col.ParentID && (parent = idx[col.ParentID])) {
        if (parent.children == null) {
          parent.children = [];
        }
        parent.children.push(col);
      } else {
        roots.push(col);
      }
    }
    set_title = function(mcol, prefix) {
      var child, _k, _len2, _ref, _results;
      if (prefix == null) {
        prefix = "";
      }
      mcol.title = "" + prefix + mcol.Title;
      if (mcol.children) {
        _ref = mcol.children;
        _results = [];
        for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
          child = _ref[_k];
          _results.push(set_title(child, mcol.title + "|"));
        }
        return _results;
      }
    };
    for (_k = 0, _len2 = roots.length; _k < _len2; _k++) {
      col = roots[_k];
      set_title(col);
    }
    return roots;
  };

  module.exports = {
    get_meta: get_meta,
    get_data: get_data
  };


  /* Testing
  get_meta("81251ned", console.log)
  #get_meta("70636eng").then(console.log).catch(console.log)
  get_data("81251ned", 
  	{Perioden: ['2010MM12','2011MM12'], WoonregioS:['NL10  ']}).then((results) -> console.log results[0], results.length)
  get_meta("81251ned", console.log)
  get_meta("81251ned").then console.log
  get_data("81251ned", 
  	{Perioden: ['2010MM12','2011MM12'], WoonregioS:['NL10  ']})
  .then((results) -> console.log results[0], results.length)
  
  get_meta("81037ned")
  .then(get_topic_tree)
  .then(console.log)
   */

}).call(this);
